[Convert nested events into a table: 1]
source="nested_event.json" host="Domane-Demo-i-0404836f69d8f6c7a" sourcetype="lab_concert"
| spath path=programs{} output=program
| fields program
| fields - _raw
| mvexpand program
| table program

[Convert nested events into a table: 2]
source="nested_event.json" host="Domane-Demo-i-0404836f69d8f6c7a" sourcetype="lab_concert"
| spath path=programs{} output=program
| fields program
| fields - _raw
| mvexpand program
| spath input=program path=season
| spath input=program path=orchestra
| spath input=program path=concerts{0}.Date output=date
| spath input=program path=concerts{0}.Time output=time
| spath input=program path=concerts{0}.Venue output=venue
| spath input=program path=concerts{0}.Location output=location
| spath input=program path=works{} output=work
| fields - program
| mvexpand work
| table season orchestra date time venue location work

[Convert nested events into a table: Complete]
source="nested_event.json" host="Domane-Demo-i-0404836f69d8f6c7a" sourcetype="lab_concert"
| spath path=programs{} output=program
| fields program
| fields - _raw
| mvexpand program
| spath input=program path=season
| spath input=program path=orchestra
| spath input=program path=concerts{0}.Date output=date
| spath input=program path=concerts{0}.Time output=time
| spath input=program path=concerts{0}.Venue output=venue
| spath input=program path=concerts{0}.Location output=location
| spath input=program path=works{} output=work
| fields - program
| mvexpand work
| spath input=work path=workTitle output=work_title
| spath input=work path=composerName output=composer
| spath input=work path=conductorName output=conductor
| spath input=work path=soloists{}.soloistName output=soloist_names
| spath input=work path=soloists{}.soloistInstrument output=soloiist_instruments
| table season orchestra date time venue location work_title composer conductor soloist_names soloiist_instruments

[Convert nested events into a table: Complete (eval version)]
source="nested_event.json" host="Domane-Demo-i-0404836f69d8f6c7a" sourcetype="lab_concert"
| eval program = spath(_raw, "programs{}")
| fields program
| fields - _raw
| mvexpand program
| eval season = spath(program, "season"), orchestra = spath(program, "orchestra"), date = spath(program, "concerts{0}.Date"), time = spath(program, "concerts{0}.Time"), venue = spath(program, "concerts{0}.Venue"), location = spath(program, "concerts{0}.Location")
| eval work = spath(program, "works{}")
| fields - program
| mvexpand work
| eval work_title = spath(work, "workTitle"), composer = spath(work, "composerName"), conductor = spath(work, "conductorName"), soloist_names = spath(work, "soloists{}.soloistName"), soloiist_instruments = spath(work, "soloists{}.soloistInstrument")
| table season orchestra date time venue location work_title composer conductor soloist_names soloiist_instruments

[Convert nested events into a table: outputlookup]
source="nested_event.json" host="Domane-Demo-i-0404836f69d8f6c7a" sourcetype="lab_concert"
| eval program = spath(_raw, "programs{}")
| fields program
| fields - _raw
| mvexpand program
| eval season = spath(program, "season"), orchestra = spath(program, "orchestra"), date = spath(program, "concerts{0}.Date"), time = spath(program, "concerts{0}.Time"), venue = spath(program, "concerts{0}.Venue"), location = spath(program, "concerts{0}.Location")
| eval work = spath(program, "works{}")
| fields - program
| mvexpand work
| eval work_title = spath(work, "workTitle"), composer = spath(work, "composerName"), conductor = spath(work, "conductorName"), soloist_names = spath(work, "soloists{}.soloistName"), soloiist_instruments = spath(work, "soloists{}.soloistInstrument")
| table season orchestra date time venue location work_title composer conductor soloist_names soloiist_instruments
| outputlookup lab_concerts.csv

[Convert nested events into a table: inputlookup]
| inputlookup lab_concerts.csv

[Concatenate multiple data sources: _audit]
index=_audit sourcetype=audittrail search_id!="rsa_*" action=search
| rex "search='(?<search_text>[\S\s]+)('(, autojoin|\]\[n\/a\])|'\]$)"
| eval search_text = if(isnull(search_text), search, search_text)
| table search_id total_run_time scan_count event_count search_text

[Concatenate multiple data sources: _introspection]
index=_introspection sourcetype=splunk_resource_usage data.search_props.sid::* component=PerProcess
| table data.search_props.sid data.pct_cpu data.pct_memory

[Concatenate multiple data sources: join]
index=_audit sourcetype=audittrail search_id!="rsa_*" action=search info=completed 
| rex "search='(?<search_text>[\S\s]+)('(, autojoin|\]\[n\/a\])|'\]$)" 
| eval search_text = if(isnull(search_text), search, search_text) 
| rex field=search_id "'(?<search_id>[^']+)" 
| join search_id type=left
    [ search index=_introspection sourcetype=splunk_resource_usage data.search_props.sid::* component=PerProcess 
    | rename data.search_props.sid as search_id ]
| table search_id total_run_time scan_count event_count search_text data.pct_cpu data.pct_memory

[Concatenate multiple data sources: stats]
(index=_audit sourcetype=audittrail search_id!="rsa_*" action=search info=completed) OR
(index=_introspection sourcetype=splunk_resource_usage data.search_props.sid::* component=PerProcess)
| rex "search='(?<search_text>[\S\s]+)('(, autojoin|\]\[n\/a\])|'\]$)" 
| eval search_text = if(isnull(search_text), search, search_text) 
| rex field=search_id "'(?<search_id>[^']+)"
| eval search_id = if(isnull(search_id), 'data.search_props.sid', search_id)
| stats first(total_run_time) first(scan_count) first(event_count) first(search_text) first(data.pct_cpu) first(data.pct_memory) by search_id
| rename first(*) as *
